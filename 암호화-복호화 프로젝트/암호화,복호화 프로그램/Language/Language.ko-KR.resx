<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Advice_AESInfo" xml:space="preserve">
    <value>AES는 많이 쓰이는 고급 암호화 표준으로, DES를 대체한 알고리즘이다. 다른 이름으로는 Rijndael 알고리즘이라고도 한다.
종류로는 128비트, 192비트, 256비트의 방식이 있다.
비밀키는 종류에 따라 16글자, 24글자, 32글자를 사용한다.</value>
  </data>
  <data name="Advice_AESType" xml:space="preserve">
    <value>AES 방식 :</value>
  </data>
  <data name="Advice_ARIAInfo" xml:space="preserve">
    <value>ARIA 알고리즘은 전자정부 구현 등으로 다양한 환경에 적합한 암호화 알고리즘이 필요함에 따라 국가보안기술연구소(NSRI) 주도로 학계, 국가정보원 등의 암호전문가들이 힘을 모아 개발한 국가 암호화 알고리즘이다. 비밀키는 128/192/256 비트를 사용한다.</value>
  </data>
  <data name="Advice_ARIAType" xml:space="preserve">
    <value>ARIA 방식 :</value>
  </data>
  <data name="Advice_Asymmetric_Info" xml:space="preserve">
    <value>비대칭형 암호</value>
  </data>
  <data name="Advice_BlowFishInfo" xml:space="preserve">
    <value>BlowFish는 데이터 암호화 표준(DES)과 국제 데이터 암호화 알고리듬(IDEA)을 대신하여 사용되는 암호화 알고리즘으로, 비밀 키는 32~448비트를 사용하며 4~56글자를 사용한다.
여기서는 1~56글자를 사용한다.</value>
  </data>
  <data name="Advice_BlowFishType" xml:space="preserve">
    <value>BlowFish 방식 :</value>
  </data>
  <data name="Advice_ConvenientOptionType" xml:space="preserve">
    <value>편의 기능</value>
  </data>
  <data name="Advice_DESInfo" xml:space="preserve">
    <value>DES는 오랫동안 표준으로 쓰여져왔던 방식으로, 56비트의 키를 사용하여 64비트의 암호문을 만들어 내는 알고리즘. 비밀키는 8글자를 사용한다.</value>
  </data>
  <data name="Advice_DESType" xml:space="preserve">
    <value>DES 방식 :</value>
  </data>
  <data name="Advice_ECDSAInfo" xml:space="preserve">
    <value>전자 서명 알고리즘(DSA)에 타원 곡선 암호(ECC) 방식을 이용한 전자 서명 알고리즘. 160비트의 키를 갖는 암호 방식으로, RSA 방식과 대등한 안전성을 가지면서 처리 속도를 빨리 할 수 있다.
여기서는 개인키로 내용을 암호화하고, 공개키만을 사용자에게 보여준다. (공개키는 데이터를 검증할 때 사용)</value>
  </data>
  <data name="Advice_ECDSAType" xml:space="preserve">
    <value>ECDSA 방식 :</value>
  </data>
  <data name="Advice_EncryptionType" xml:space="preserve">
    <value>암호화 종류</value>
  </data>
  <data name="Advice_HMACInfo" xml:space="preserve">
    <value>HMAC는 해시 기반 메시지 인증 코드로, MD5, SHA-1 등 반복적인 암호화 해시 기능을 비밀 공용키와 함께 사용하며, 체크섬을 변경하는 것이 불가능하도록 한 키 기반의 메시지 인증 알고리즘.</value>
  </data>
  <data name="Advice_HMACType" xml:space="preserve">
    <value>HMAC 모드 :</value>
  </data>
  <data name="Advice_MD5Info" xml:space="preserve">
    <value>임의의 길이의 값을 입력받아서 128비트 길이의 해시값을 출력하는 알고리즘이다. 예전에 한번 뚫렸기 때문에 안전성의 문제로 요즘은 SHA가 주로 사용된다.</value>
  </data>
  <data name="Advice_MD5Type" xml:space="preserve">
    <value>MD5 방식 :</value>
  </data>
  <data name="Advice_OneWay_Info" xml:space="preserve">
    <value>단방향 암호</value>
  </data>
  <data name="Advice_ProgramName" xml:space="preserve">
    <value>도움말</value>
  </data>
  <data name="Advice_RandomCodeInfo" xml:space="preserve">
    <value>조건에 만족하는 랜덤 문자열을 생성하는 기능
사용 방법 :
1. 생성할 문자열의 총 길이를 입력한다.
2. 문자열에 포함시킬 문자를 입력한다.
3. "랜덤 코드 얻기"로 조건에 맞는 랜덤 문자열을 생성한다.</value>
  </data>
  <data name="Advice_RandomCodeType" xml:space="preserve">
    <value>랜덤 코드 :</value>
  </data>
  <data name="Advice_RandomNumberInfo" xml:space="preserve">
    <value>최솟값 ~ 최대값 사이의 랜덤 숫자를 생성하는 기능
사용 방법 :
1. 최솟값을 입력한다.
2. 최댓값을 입력한다.
3. "랜덤 난수 얻기"로 최솟값~최댓값 사이의 숫자를 생성한다.</value>
  </data>
  <data name="Advice_RandomNumberType" xml:space="preserve">
    <value>랜덤 난수 :</value>
  </data>
  <data name="Advice_RC2Info" xml:space="preserve">
    <value>AES는 DES를 대체한 알고리즘으로, DES보다 3배 빠르며, 차분, 선형 공격에 대응한다. 비밀키는 8글자를 사용한다.</value>
  </data>
  <data name="Advice_RC2Type" xml:space="preserve">
    <value>RC2 방식 :</value>
  </data>
  <data name="Advice_RIPEMD160Info" xml:space="preserve">
    <value>임의의 길이의 값을 입력받아서 128비트/160비트 길이의 해시값을 출력하는 알고리즘이다. 여기서는 160비트만 지원한다.</value>
  </data>
  <data name="Advice_RIPEMD160Type" xml:space="preserve">
    <value>RIPEMD160 방식 :</value>
  </data>
  <data name="Advice_RSAInfo" xml:space="preserve">
    <value>RSA는 공개키 암호화 알고리즘으로, 공개키, 개인키가 한 쌍을 이룬다.
문서를 암호화할 때에는 공개키를 사용하고, 암호화한 내용을 해독할려면 개인키가 필요하다. 키를 반대로 적용하는 것도 가능하다.
소인수분해를 사용하기 때문에 DES보다 100~1000배 느리다는 단점이 있다."</value>
  </data>
  <data name="Advice_RSAType" xml:space="preserve">
    <value>RSA 방식 :</value>
  </data>
  <data name="Advice_SEEDInfo" xml:space="preserve">
    <value>SEED 알고리즘은 전자상거래, 금융, 무선통신 등에서 전송되는 개인정보와 같은 중요한 정보를 보호하기 위해 KISA가 개발한 한국형 표준 대칭키 암호화 알고리즘이다. S/W로 구현시 Triple DES보다 고속이다. 비밀키는 128비트를 사용하며 16글자를 사용한다.</value>
  </data>
  <data name="Advice_SEEDType" xml:space="preserve">
    <value>SEED 방식 :</value>
  </data>
  <data name="Advice_SHA1Info" xml:space="preserve">
    <value>SHA 함수들 중 가장 많이 쓰이는 알고리즘으로, MD5와 마찬가지로 예전에 한번 뚫렸기 때문에 요즘은 SHA-2가 대체되서 사용된다.</value>
  </data>
  <data name="Advice_SHA1Type" xml:space="preserve">
    <value>SHA-1 방식 :</value>
  </data>
  <data name="Advice_SHA2Info" xml:space="preserve">
    <value>SHA-2에는 SHA-1을 대체해서 나온 알고리즘으로, SHA-224, SHA-256, SHA-384, SHA-512의 4종류 방식이 있다.
여기서는 SHA-224를 사용하지 않음.</value>
  </data>
  <data name="Advice_SHA2Type" xml:space="preserve">
    <value>SHA-2 방식 :</value>
  </data>
  <data name="Advice_Symmetric_Info" xml:space="preserve">
    <value>대칭형 암호</value>
  </data>
  <data name="Advice_TripleDESInfo" xml:space="preserve">
    <value>Triple DES는 3중으로 DES를 적용해서 키 길이를 3배로 늘리는 알고리즘. 비밀키는 16글자를 사용한다.
여기서는 MD5방식을 이용해서 입력된 비밀키를 무조건 16글자(128비트)로 만들어주는 알고리즘을 사용한다.

순서: 첫번째 8글자 -&gt; 두번째 8글자 -&gt; 첫번째 8글자 순으로 암호화
</value>
  </data>
  <data name="Advice_TripleDESType" xml:space="preserve">
    <value>Triple DES 방식 :</value>
  </data>
  <data name="Decryption" xml:space="preserve">
    <value>복호화하기</value>
  </data>
  <data name="Encryption" xml:space="preserve">
    <value>암호화하기</value>
  </data>
  <data name="Input_Convert" xml:space="preserve">
    <value>변환할 텍스트 입력</value>
  </data>
  <data name="InputIV_16" xml:space="preserve">
    <value>IV (16글자)</value>
  </data>
  <data name="InputKey_16_24_32" xml:space="preserve">
    <value>비밀키 입력 (16,24,32글자)</value>
  </data>
  <data name="ModeName_AES" xml:space="preserve">
    <value>AES 모드</value>
  </data>
  <data name="Result_Text" xml:space="preserve">
    <value>결과</value>
  </data>
  <data name="ModeName_ARIA" xml:space="preserve">
    <value>ARIA 모드</value>
  </data>
  <data name="InputKey_1_56" xml:space="preserve">
    <value>비밀키 입력 (1~56글자)</value>
  </data>
  <data name="ModeName_BlowFish" xml:space="preserve">
    <value>BlowFish 모드</value>
  </data>
  <data name="ModeName_CDKey" xml:space="preserve">
    <value>CD 키 생성</value>
  </data>
  <data name="InputIV_8" xml:space="preserve">
    <value>IV (8글자)</value>
  </data>
  <data name="InputKey_8" xml:space="preserve">
    <value>비밀키 입력 (8글자)</value>
  </data>
  <data name="ModeName_DES" xml:space="preserve">
    <value>DES 모드</value>
  </data>
  <data name="Input_Signature" xml:space="preserve">
    <value>서명할 텍스트 입력</value>
  </data>
  <data name="Key" xml:space="preserve">
    <value>키 입력 : </value>
  </data>
  <data name="ModeName_ECDSA" xml:space="preserve">
    <value>ECDSA 모드</value>
  </data>
  <data name="DataBeforeSigning" xml:space="preserve">
    <value>서명 전 데이터</value>
  </data>
  <data name="PublicKey" xml:space="preserve">
    <value>공개키 (Public Key)</value>
  </data>
  <data name="Signature" xml:space="preserve">
    <value>서명하기</value>
  </data>
  <data name="SignedData" xml:space="preserve">
    <value>서명 후 데이터</value>
  </data>
  <data name="DataVerification" xml:space="preserve">
    <value>데이터 검증하기</value>
  </data>
  <data name="HMACMode" xml:space="preserve">
    <value>HMAC 모드</value>
  </data>
  <data name="HMACModeSetup" xml:space="preserve">
    <value>HMAC 모드 설정</value>
  </data>
  <data name="InputKey" xml:space="preserve">
    <value>키 입력 : </value>
  </data>
  <data name="ModeName_MD5" xml:space="preserve">
    <value>MD5 모드</value>
  </data>
  <data name="MenuBar_AESEncryption" xml:space="preserve">
    <value>AES 암호화</value>
  </data>
  <data name="MenuBar_ARIAEncryption" xml:space="preserve">
    <value>ARIA 암호화</value>
  </data>
  <data name="MenuBar_BlowFishEncryption" xml:space="preserve">
    <value>BlowFish 암호화</value>
  </data>
  <data name="MenuBar_CDKeyMode" xml:space="preserve">
    <value>CD-Key 생성기</value>
  </data>
  <data name="MenuBar_DESEncryption" xml:space="preserve">
    <value>DES 암호화</value>
  </data>
  <data name="MenuBar_ECDSAEncryption" xml:space="preserve">
    <value>ECDSA 암호화</value>
  </data>
  <data name="MenuBar_EncryptionList" xml:space="preserve">
    <value>암호화하기</value>
  </data>
  <data name="MenuBar_Help" xml:space="preserve">
    <value>도움말</value>
  </data>
  <data name="MenuBar_Language" xml:space="preserve">
    <value>언어</value>
  </data>
  <data name="MenuBar_MD5Encryption" xml:space="preserve">
    <value>MD5 암호화</value>
  </data>
  <data name="MenuBar_ProgramInfo" xml:space="preserve">
    <value>프로그램 정보</value>
  </data>
  <data name="MenuBar_RandomCodeMode" xml:space="preserve">
    <value>랜덤 코드</value>
  </data>
  <data name="MenuBar_RC2Encryption" xml:space="preserve">
    <value>RC2 암호화</value>
  </data>
  <data name="MenuBar_RIPEMD160Encryption" xml:space="preserve">
    <value>RIPEMD160 암호화</value>
  </data>
  <data name="MenuBar_RSAEncryption" xml:space="preserve">
    <value>RSA 암호화</value>
  </data>
  <data name="MenuBar_SEEDEncryption" xml:space="preserve">
    <value>SEED 암호화</value>
  </data>
  <data name="MenuBar_SHAEncryption" xml:space="preserve">
    <value>SHA 암호화</value>
  </data>
  <data name="MenuBar_TripleDESEncryption" xml:space="preserve">
    <value>Triple DES 암호화</value>
  </data>
  <data name="MenuBar_View" xml:space="preserve">
    <value>보기</value>
  </data>
  <data name="MenuBar_ViewHelp" xml:space="preserve">
    <value>도움말 보기</value>
  </data>
  <data name="ProgramInfo_ProgramInfo" xml:space="preserve">
    <value>프로그램 이름: VTOF Manager
(Various-types of function manager)
버전: 2.15
제작자: 김청호
이메일 주소: mokpo4550@gmail.com
제작 날짜: 2017/12/27 오후 6시 47분
마지막으로 업데이트된 날짜: 2018/03/11 오후 07시 05분</value>
  </data>
  <data name="ProgramInfo_ProgramName" xml:space="preserve">
    <value>프로그램 정보</value>
  </data>
  <data name="ProgramInfo_ProgramVersionInfo" xml:space="preserve">
    <value>프로그램 버전 정보
1.0버전: DES, 3DES, AES, MD5, SHA, RSA, ECDSA, 랜덤 코드, 보기메뉴, 도움말과 프로그램 정보 추가
1.1버전: RC2 모드 추가
1.2버전: RIPEMD160, ARIA 모드 추가, 메뉴와 창 크기 조정
1.3버전: SEED 모드 추가
1.4버전: MD5, RIPEMD160, SHA방식에 HMAC 모드를 추가하고 프로그램 배경화면 설정
1.5버전: BlowFish 모드 추가, 비밀키 및 IV의 길이제한 경고 함수를 개편
1.6버전: Tab 누를시 포커스가 이동할 순서 개편, DES 암호화 CBC가 아닌 ECB모드로 설정되었던 점 수정, 버전 정보에 대한 텍스트 파일 추가, 도움말을 클릭했을 때 오류가 뜨던 문제 수정
1.7버전: 영어, 한글 언어를 지원, "Form, Panel, 경고 클래스, 언어 등을 캡슐화 및 세분화"
1.8버전: DES, 3DES, AES, RC2방식에 IV 모드를 추가하고 경고창 번역을 추가함
1.85버전: 편의기능 메뉴 추가, 번역 알고리즘 개편
1.9버전: 구글 번역기 추가, 나눔글꼴 추가
2.0버전: 프로그램에 나눔글꼴 내장, 프로그램 이름 변경, UI 및 번역 개편, 프로그램 창 크기를 늘림, 파일 암호화 기능 추가 (ARIA, BlowFish, ECDSA, RSA, SEED 제외)
2.1버전: 기타 알림창 번역이 안되었던 점 수정, 대칭키 암호화 UI에 진행률 추가, 텍스트창에 스크롤바 추가, 스테가노그래피 기능 추가, 잘못된 파일을 복호화할 시 에러창이 안뜨던 문제 수정
2.15버전: 100메가 이하의 파일이 암호화되지 않던 문제 수정

업데이트 계획:
SEED와 ARIA 알고리즘 개편
CD 키 생성기를 추가할 예정
RSA와 ECDSA 파일 암호화를 추가할 예정

제작자 : 김청호
이메일 : mokpo4550@gmail.com</value>
  </data>
  <data name="Program_ProgramName" xml:space="preserve">
    <value>VTOF Manager 2.15</value>
  </data>
  <data name="Random_CharToInclude" xml:space="preserve">
    <value>포함할 문자 :</value>
  </data>
  <data name="Random_DefaultChar" xml:space="preserve">
    <value>문자를 기본값으로 설정</value>
  </data>
  <data name="Random_GetRandomCode" xml:space="preserve">
    <value>랜덤 코드 얻기</value>
  </data>
  <data name="Random_GetRandomNumber" xml:space="preserve">
    <value>랜덤 난수 얻기</value>
  </data>
  <data name="Random_MaximumValue" xml:space="preserve">
    <value>최대 숫자 : </value>
  </data>
  <data name="Random_MinimumValue" xml:space="preserve">
    <value>최소 숫자 : </value>
  </data>
  <data name="ModeName_Random" xml:space="preserve">
    <value>랜덤 코드</value>
  </data>
  <data name="Random_RandomCodeResult" xml:space="preserve">
    <value>랜덤 코드 결과</value>
  </data>
  <data name="Random_RandomNumberResult" xml:space="preserve">
    <value>랜덤 숫자 결과</value>
  </data>
  <data name="Random_TotalLength" xml:space="preserve">
    <value>총 길이 : </value>
  </data>
  <data name="ModeName_RC2" xml:space="preserve">
    <value>RC2 모드</value>
  </data>
  <data name="ModeName_RIPEMD160" xml:space="preserve">
    <value>RIPEMD160 모드</value>
  </data>
  <data name="Decryption_NeedPrivateKey" xml:space="preserve">
    <value>복호화하기
[개인키필요]</value>
  </data>
  <data name="Encryption_NeedPublicKey" xml:space="preserve">
    <value>암호화하기
[공개키필요]</value>
  </data>
  <data name="MakeKey" xml:space="preserve">
    <value>공개키/개인키
만들기</value>
  </data>
  <data name="ModeName_RSA" xml:space="preserve">
    <value>RSA 모드</value>
  </data>
  <data name="PrivateKey" xml:space="preserve">
    <value>개인키 (Private Key)</value>
  </data>
  <data name="InputKey_16" xml:space="preserve">
    <value>비밀키 입력 (16글자)</value>
  </data>
  <data name="ModeName_SEED" xml:space="preserve">
    <value>SEED 모드</value>
  </data>
  <data name="ModeName_SHA" xml:space="preserve">
    <value>SHA 모드</value>
  </data>
  <data name="SHA1Setup" xml:space="preserve">
    <value>SHA-1</value>
  </data>
  <data name="SHA256Setup" xml:space="preserve">
    <value>SHA-256</value>
  </data>
  <data name="SHA384Setup" xml:space="preserve">
    <value>SHA-384</value>
  </data>
  <data name="SHA512Setup" xml:space="preserve">
    <value>SHA-512</value>
  </data>
  <data name="SHAMode" xml:space="preserve">
    <value>SHA 모드</value>
  </data>
  <data name="ModeName_TripleDES" xml:space="preserve">
    <value>Triple DES 모드</value>
  </data>
  <data name="MenuBar_OtherOptionList" xml:space="preserve">
    <value>다른 옵션 보기</value>
  </data>
  <data name="ModeName_Translator" xml:space="preserve">
    <value>번역기</value>
  </data>
  <data name="MenuBar_TranslatorMode" xml:space="preserve">
    <value>번역기</value>
  </data>
  <data name="Translator_FromLanguage" xml:space="preserve">
    <value>원래 언어 : </value>
  </data>
  <data name="Translator_FromText" xml:space="preserve">
    <value>변환할 텍스트 입력</value>
  </data>
  <data name="Translator_Reverse" xml:space="preserve">
    <value>바꾸기</value>
  </data>
  <data name="Translator_Speak" xml:space="preserve">
    <value>음성 듣기</value>
  </data>
  <data name="Translator_Status1" xml:space="preserve">
    <value>상태 : </value>
  </data>
  <data name="Translator_Status2" xml:space="preserve">
    <value>상태 : 번역 중입니다...</value>
  </data>
  <data name="Translator_Status3" xml:space="preserve">
    <value>상태 : 번역 완료</value>
  </data>
  <data name="Translator_Status4" xml:space="preserve">
    <value>상태 : 오류 발생</value>
  </data>
  <data name="Translator_ToLanguage" xml:space="preserve">
    <value>번역할 언어 : </value>
  </data>
  <data name="Translator_ToText" xml:space="preserve">
    <value>결과</value>
  </data>
  <data name="Translator_Translate" xml:space="preserve">
    <value>번역하기</value>
  </data>
  <data name="Translator_UsedLanguage1" xml:space="preserve">
    <value>최근에 사용된 원래 언어</value>
  </data>
  <data name="Translator_UsedLanguage2" xml:space="preserve">
    <value>최근에 사용된 번역 언어</value>
  </data>
  <data name="CheckResult" xml:space="preserve">
    <value>변환 결과 확인</value>
  </data>
  <data name="FileSave1" xml:space="preserve">
    <value>파일을 암호화하고 저장하기</value>
  </data>
  <data name="FileSave2" xml:space="preserve">
    <value>암호화된 파일을 복호화하고 저장하기</value>
  </data>
  <data name="FileTitle" xml:space="preserve">
    <value>파일 암호화</value>
  </data>
  <data name="Result_File" xml:space="preserve">
    <value>결과 : </value>
  </data>
  <data name="SelectFile" xml:space="preserve">
    <value>파일 불러오기</value>
  </data>
  <data name="TextTitle" xml:space="preserve">
    <value>텍스트 암호화</value>
  </data>
  <data name="Advice_CDKeyInfo" xml:space="preserve">
    <value>추가 예정</value>
  </data>
  <data name="Advice_CDKeyType" xml:space="preserve">
    <value>CD키 생성기 :</value>
  </data>
  <data name="Advice_TranslatorInfo" xml:space="preserve">
    <value>구글 번역기는 텍스트를 한 언어에서 다른 언어로 번역하기 위해 Google 에서 개발한 무료 다국어 기계 번역 서비스입니다.
사용 방법 :
1. 원본 텍스트의 언어를 선택
2. 번역할 언어를 선택
3. 번역할 텍스트를 입력
4. "번역하기" 버튼으로 언어 번역 가능
5. "바꾸기" 버튼은 원래 언어와 번역할 원어를 바꾼다.
6. "음성듣기"는 번역된 텍스트를 음성으로 알려준다.</value>
  </data>
  <data name="Advice_TranslatorType" xml:space="preserve">
    <value>구글 번역기 :</value>
  </data>
  <data name="InputIV_8_x" xml:space="preserve">
    <value>IV (8글자) : </value>
  </data>
  <data name="InputKey_16_24_32_x" xml:space="preserve">
    <value>비밀키 입력 : 
(16,24,32글자)</value>
  </data>
  <data name="InputKey_16_x" xml:space="preserve">
    <value>비밀키 입력 : 
(16글자)</value>
  </data>
  <data name="InputKey_1_56_x" xml:space="preserve">
    <value>비밀키 입력 : 
(1~56 글자)</value>
  </data>
  <data name="Advice_SteganographyInfo" xml:space="preserve">
    <value>전달하려는 정보를 이미지, 오디오 등의 파일에 인간이 감지할 수 없도록 숨겨져 상대방에게 전달하는 기술이다. 기존의 암호화 방법은 메시지를 암호화하여 정보를 보호하는 반면에 스테가노그래피는 비밀정보를 매체에 은닉하여 그 정보의 존재 자체를 감추는 보안 기술이다.</value>
  </data>
  <data name="Advice_SteganographyType" xml:space="preserve">
    <value>스테가노그래피 :</value>
  </data>
  <data name="Advice_Steganography_Info" xml:space="preserve">
    <value>심층 암호</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>데이터</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>파일</value>
  </data>
  <data name="InputKey_AES_16_24_32" xml:space="preserve">
    <value>비밀키 입력 (AES 방식 (16, 24, 32))</value>
  </data>
  <data name="MenuBar_SteganographyEncryption" xml:space="preserve">
    <value>Steganography 암호화</value>
  </data>
  <data name="ModeName_Steganography" xml:space="preserve">
    <value>스테가노그래피</value>
  </data>
</root>